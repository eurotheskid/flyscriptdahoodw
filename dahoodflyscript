local plr = game.Players.LocalPlayer
local mouse = plr:GetMouse()
local userInputService = game:GetService("UserInputService")  -- Get the UserInputService

local player = plr
local torso, Core, Weld, flying, speed = nil, nil, nil, false, 10
local keys = {a=false, d=false, w=false, s=false, up=false, down=false}
local e1, e2

local function setupFlying()
    -- Make sure the Core part is reset
    if workspace:FindFirstChild("Core") then
        workspace.Core:Destroy()
    end

    Core = Instance.new("Part")
    Core.Name = "Core"
    Core.Size = Vector3.new(0.05, 0.05, 0.05)
    Core.Parent = workspace

    Weld = Instance.new("Weld", Core)
    Weld.Part0 = Core
    Weld.Part1 = player.Character:WaitForChild("LowerTorso")
    Weld.C0 = CFrame.new(0, 0, 0)

    torso = Core
end

local function startFlying()
    local pos = Instance.new("BodyPosition", torso)
    local gyro = Instance.new("BodyGyro", torso)
    pos.Name = "EPIXPOS"
    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    pos.position = torso.Position
    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.cframe = torso.CFrame

    repeat
        wait()
        player.Character.Humanoid.PlatformStand = true
        local new = gyro.cframe - gyro.cframe.p + pos.position

        if not (keys.w or keys.s or keys.a or keys.d or keys.up or keys.down) then
            speed = 5
        end

        if keys.w then
            new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        end
        if keys.s then
            new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        end
        if keys.d then
            new = new * CFrame.new(speed, 0, 0)
        end
        if keys.a then
            new = new * CFrame.new(-speed, 0, 0)
        end
        if keys.up then
            new = new + Vector3.new(0, speed, 0)  -- Move up
        end
        if keys.down then
            new = new - Vector3.new(0, speed, 0)  -- Move down
        end

        pos.position = new.p

        if keys.w then
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
        elseif keys.s then
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
        else
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame
        end
    until not flying

    if gyro then gyro:Destroy() end
    if pos then pos:Destroy() end
    player.Character.Humanoid.PlatformStand = false
    speed = 10
end

local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end  -- Ignore input if it's already processed by the game (e.g., UI focus)

    if not torso or not torso.Parent then
        flying = false
        e1:disconnect()
        e2:disconnect()
        return
    end

    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then
            keys.w = true
        elseif input.KeyCode == Enum.KeyCode.S then
            keys.s = true
        elseif input.KeyCode == Enum.KeyCode.A then
            keys.a = true
        elseif input.KeyCode == Enum.KeyCode.D then
            keys.d = true
        elseif input.KeyCode == Enum.KeyCode.Space then
            keys.up = true  -- Move up when Space is pressed
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            keys.down = true  -- Move down when LeftControl is pressed
        elseif input.KeyCode == Enum.KeyCode.X then
            if flying then
                flying = false
            else
                flying = true
                startFlying()
            end
        end
    end
end

local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then
            keys.w = false
        elseif input.KeyCode == Enum.KeyCode.S then
            keys.s = false
        elseif input.KeyCode == Enum.KeyCode.A then
            keys.a = false
        elseif input.KeyCode == Enum.KeyCode.D then
            keys.d = false
        elseif input.KeyCode == Enum.KeyCode.Space then
            keys.up = false  -- Stop moving up when Space is released
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            keys.down = false  -- Stop moving down when LeftControl is released
        end
    end
end

-- Reset flying setup after respawn
player.CharacterAdded:Connect(function(character)
    character:WaitForChild("LowerTorso")
    setupFlying()  -- Reinitialize flying setup
end)

-- Initialize for first time
setupFlying()

-- Connect input events
userInputService.InputBegan:Connect(onInputBegan)
userInputService.InputEnded:Connect(onInputEnded)
